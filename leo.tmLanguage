<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>leo</string>
    <key>scopeName</key>
    <string>source.leo</string>
    <key>scope</key>
    <string>source.leo</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#block_doc_comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#block_comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#line_doc_comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#line_comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#string_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#char_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#core_types</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#integer_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#built-in_core_assign</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#boolean_constant</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#control_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#storage_type_const</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#storage_type_let</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#storage_modifier_mutable</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#self_variable</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#circuit_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#static_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#inside_braces</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#type_params</string>
      </dict>
      <dict>
        <key>comment</key>
        <string>Control keyword import</string>
        <key>name</key>
        <string>keyword.control.import.leo</string>
        <key>match</key>
        <string>\b(import)\b</string>
      </dict>
      <dict>
        <key>comment</key>
        <string>Import keywords</string>
        <key>begin</key>
        <string>(?&lt;=import)\s+</string>
        <key>end</key>
        <string>;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_comment</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:\.\s*)(\*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>syntax.all.import.leo</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\W?(\*)\W?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>syntax.all.import.leo</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:\w+\s+)(\bas\b)(?:\s+\w+,?)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.as.leo</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <dict>
        <key>comment</key>
        <string>Support variable test</string>
        <key>match</key>
        <string>\btest\b(?=\s*function)</string>
        <key>name</key>
        <string>support.variable.test.leo</string>
      </dict>
      <dict>
        <key>comment</key>
        <string>Test Context Annotation</string>
        <key>name</key>
        <string>test.context.annotation.leo</string>
        <key>match</key>
        <string>@[a-zA-Z][a-zA-Z0-9_]*</string>
      </dict>
      <dict>
        <key>comment</key>
        <string>Circuit definition</string>
        <key>begin</key>
        <string>(?&lt;=\bcircuit\b)\s+\b\w+\s*\{</string>
        <key>end</key>
        <string>\}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#circuit_attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#inside_braces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#core_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#integer_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#built-in_core_assign</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean_constant</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_keyword</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_type_const</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_type_let</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_modifier_mutable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self_variable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#char_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_keyword</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#static_keyword</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#invoking_attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type_params</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#circuit_static_call</string>
          </dict>
        </array>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>circuit_static_call</key>
      <dict>
        <key>comment</key>
        <string>Circuit staitc call</string>
        <key>match</key>
        <string>(\w+)(?:\s*::)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>circuit.name.static.call</string>
          </dict>
        </dict>
      </dict>
      <key>circuit_call</key>
      <dict>
        <key>comment</key>
        <string>Circuit call</string>
        <key>begin</key>
        <string>\b\w+\s*\{</string>
        <key>end</key>
        <string>\}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#circuit_attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#integer_literal</string>
          </dict>
        </array>
      </dict>
      <key>invoking_attribute</key>
      <dict>
        <key>comment</key>
        <string>Invoking circuit attribute</string>
        <key>match</key>
        <string>(\w+\.|(?&lt;=\bself\b\.))(\b\w+(?!\()\b)</string>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name</string>
          </dict>
        </dict>
      </dict>
      <key>circuit_attribute</key>
      <dict>
        <key>comment</key>
        <string>Circuit Attribute </string>
        <key>match</key>
        <string>\b(\w*)\b\s*:(?!\s*.*[=\)])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name</string>
          </dict>
        </dict>
      </dict>
      <key>block_doc_comment</key>
      <dict>
        <key>comment</key>
        <string>Block documentation comment</string>
        <key>name</key>
        <string>comment.block.documentation.leo</string>
        <key>begin</key>
        <string>/\*[\*!](?![\*/])</string>
        <key>end</key>
        <string>\*/</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_comment</string>
          </dict>
        </array>
      </dict>
      <key>block_comment</key>
      <dict>
        <key>comment</key>
        <string>Block comment</string>
        <key>name</key>
        <string>comment.block.leo</string>
        <key>begin</key>
        <string>/\*</string>
        <key>end</key>
        <string>\*/</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_comment</string>
          </dict>
        </array>
      </dict>
      <key>line_doc_comment</key>
      <dict>
        <key>comment</key>
        <string>Single-line documentation comment</string>
        <key>name</key>
        <string>comment.line.documentation.leo</string>
        <key>begin</key>
        <string>//[!/](?=[^/])</string>
        <key>end</key>
        <string>$</string>
      </dict>
      <key>line_comment</key>
      <dict>
        <key>comment</key>
        <string>Single-line comment</string>
        <key>name</key>
        <string>comment.line.double-slash.leo</string>
        <key>begin</key>
        <string>//</string>
        <key>end</key>
        <string>$</string>
      </dict>
      <key>integer_literal</key>
      <dict>
        <key>comment</key>
        <string>Integer literal (decimal)</string>
        <key>name</key>
        <string>constant.numeric.integer.decimal.leo</string>
        <key>match</key>
        <string>\b((0|[1-9][0-9]*))([ui](8|16|32|64|128))?\b</string>
      </dict>
      <key>built-in_core_assign</key>
      <dict>
        <key>comment</key>
        <string>Built-in/core assign</string>
        <key>name</key>
        <string>storage.type.assign.leo</string>
        <key>match</key>
        <string>\b((([0-9]*)(group|field)))</string>
      </dict>
      <key>boolean_constant</key>
      <dict>
        <key>comment</key>
        <string>Boolean constant</string>
        <key>name</key>
        <string>constant.language.boolean.leo</string>
        <key>match</key>
        <string>\b(true|false)\b</string>
      </dict>
      <key>control_keyword</key>
      <dict>
        <key>comment</key>
        <string>Control keyword</string>
        <key>name</key>
        <string>keyword.control.leo</string>
        <key>match</key>
        <string>\b(else|if|in|for|return)\b</string>
      </dict>
      <key>storage_type_let</key>
      <dict>
        <key>comment</key>
        <string>Storage type let</string>
        <key>name</key>
        <string>storage.type.let.leo</string>
        <key>match</key>
        <string>\b(let)\b</string>
      </dict>
      <key>storage_type_const</key>
      <dict>
        <key>comment</key>
        <string>Storage type const</string>
        <key>name</key>
        <string>storage.type.const.leo</string>
        <key>match</key>
        <string>\b(const)\b</string>
      </dict>
      <key>storage_modifier_mutable</key>
      <dict>
        <key>comment</key>
        <string>Storage modifier mutable</string>
        <key>name</key>
        <string>storage.modifier.mut.leo</string>
        <key>match</key>
        <string>\bmut\b</string>
      </dict>
      <key>self_variable</key>
      <dict>
        <key>comment</key>
        <string>Self variable</string>
        <key>name</key>
        <string>variable.language.leo</string>
        <key>match</key>
        <string>\b(self|Self)\b</string>
      </dict>
      <key>escaped_character</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.leo</string>
        <key>match</key>
        <string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
      </dict>
      <key>string_literal</key>
      <dict>
        <key>comment</key>
        <string>Double-quote string literal</string>
        <key>name</key>
        <string>string.quoted.double.leo</string>
        <key>match</key>
        <string>"[^"]*"?</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escaped_character</string>
          </dict>
        </array>
      </dict>
      <key>char_literal</key>
      <dict>
        <key>comment</key>
        <string>Single-quote char literal</string>
        <key>name</key>
        <string>string.quoted.single.leo</string>
        <key>match</key>
        <string>'[^']*'?</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escaped_character</string>
          </dict>
        </array>
      </dict>
      <key>function_keyword</key>
      <dict>
        <key>comment</key>
        <string>Storage type function</string>
        <key>name</key>
        <string>storage.type.function.leo</string>
        <key>match</key>
        <string>\b(function)\b</string>
      </dict>
      <key>static_keyword</key>
      <dict>
        <key>comment</key>
        <string>Static storage modifier</string>
        <key>name</key>
        <string>storage.modifier.static.leo</string>
        <key>match</key>
        <string>\bstatic\b</string>
      </dict>
      <key>core_types</key>
      <dict>
        <key>comment</key>
        <string>Built-in/core type</string>
        <key>name</key>
        <string>storage.type.core.leo</string>
        <key>match</key>
        <string>\b(bool|field|u8|u16|u32|u64|u128|i8|i16|i32|i64|i128|string|char|address|group|any|integer)\b</string>
      </dict>
      <key>circuit_keyword</key>
      <dict>
        <key>comment</key>
        <string>Storage type circuit</string>
        <key>name</key>
        <string>storage.type.circuit.leo</string>
        <key>match</key>
        <string>\b(circuit)\b</string>
      </dict>
      <key>console_methods</key>
      <dict>
        <key>comment</key>
        <string>Console methods</string>
        <key>match</key>
        <string>console\.\b(assert|log|debug|error)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.method.console.leo</string>
          </dict>
        </dict>
      </dict>
      <key>method_name_call</key>
      <dict>
        <key>comment</key>
        <string>Method name call</string>
        <key>match</key>
        <string>\w+\s*\.\s*(\w+)\s*</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>circuit.method.name.call</string>
          </dict>
        </dict>
      </dict>
      <key>function_name_call</key>
      <dict>
        <key>comment</key>
        <string>Function name call</string>
        <key>match</key>
        <string>\b(\w+)\b\s*\(</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>function.name.call</string>
          </dict>
        </dict>
      </dict>
      <key>type_params</key>
      <dict>
        <key>comment</key>
        <string>Type parameters</string>
        <key>name</key>
        <string>meta.type_params.leo</string>
        <key>begin</key>
        <string>\[</string>
        <key>end</key>
        <string>\]</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#core_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean_constant</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#integer_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#in_core_assign</string>
          </dict>
        </array>
      </dict>
      <key>inside_braces</key>
      <dict>
        <key>comment</key>
        <string>Inside braces (sub-rule for use in function)</string>
        <key>name</key>
        <string>punctuation.braces.leo</string>
        <key>begin</key>
        <string>\{</string>
        <key>end</key>
        <string>\}</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#inside_braces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_doc_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#core_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#integer_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#built-in_core_assign</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean_constant</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control_keyword</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_type_const</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_type_let</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_modifier_mutable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self_variable</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#char_literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#invoking_attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#circuit_attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#circuit_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#console_methods</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type_params</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#circuit_static_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#method_name_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function_name_call</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>